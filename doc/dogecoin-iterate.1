'\" t
.\"     Title: dogecoin-iterate
.\"    Author: [see the "AUTHOR" section]
.\" Generator: DocBook XSL Stylesheets v1.79.1 <http://docbook.sf.net/>
.\"      Date: 02/20/2018
.\"    Manual: \ \&
.\"    Source: \ \&
.\"  Language: English
.\"
.TH "DOGECOIN\-ITERATE" "1" "02/20/2018" "\ \&" "\ \&"
.\" -----------------------------------------------------------------
.\" * Define some portability stuff
.\" -----------------------------------------------------------------
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.\" http://bugs.debian.org/507673
.\" http://lists.gnu.org/archive/html/groff/2009-02/msg00013.html
.\" ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
.ie \n(.g .ds Aq \(aq
.el       .ds Aq '
.\" -----------------------------------------------------------------
.\" * set default formatting
.\" -----------------------------------------------------------------
.\" disable hyphenation
.nh
.\" disable justification (adjust text to left margin only)
.ad l
.\" -----------------------------------------------------------------
.\" * MAIN CONTENT STARTS HERE *
.\" -----------------------------------------------------------------
.SH "NAME"
dogecoin-iterate \- Iterate over dogecoind\*(Aqs block files\&.
.SH "SYNOPSIS"
.sp
\fBdogecoin\-iterate\fR [\fIOPTIONS\fR]
.SH "DESCRIPTION"
.sp
\fBdogecoin\-iterate\fR creates a text dump of the blockchain contents, by directly reading \fBdogecoind\fR\*(Aqs block files\&. This is much faster than using \fBdogecoin\-cli\fR to query dogecoind directly, though \fBdogecoind\fR can provide more contextual metadata\&.
.sp
It iterates each block (from genesis to longest tip), and within that block iterates each transaction (from coinbase onwards in block order), and within that transaction iterates each input (in order), and then each output (in order)\&.
.sp
Note that dogecoin convention is to print block and transaction hashes backwards ("big\-endian"): that convention is used here for compatibility with block explorers and dogecoind\&.
.SH "OPTIONS"
.PP
\fB\-\-block\fR=\fIFORMAT\fR
.RS 4
Print out the format string for each block\&. Escape codes are prefixed with
\fI%\fR:
.sp
.if n \{\
.RS 4
.\}
.nf
%bl: block length
%bv: block version
%bp: block prev hash as a 64\-character big\-endian hex string
%bm: block merkle hash as a 64\-character little\-endian hex string
%bs: block timestamp
%bt: block target
%bn: block nonce
%bc: block transaction count
%bh: block hash as a 64\-character big\-endian hex string
%bN: block height (0 == genesis)
%bH: block header as a hex string
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB\-\-tx,\-\-transaction\fR=\fIFORMAT\fR
.RS 4
Print out the format string for each transaction (in the order they are in the block)\&. All the block escape codes are valid, and the following additional ones:
.sp
.if n \{\
.RS 4
.\}
.nf
%th: transaction hash as a 64\-character big\-endian hex string
%tv: transaction version
%ti: transaction input count
%to: transaction output count
%tt: transaction locktime
%tl: transaction length (in vbytes)
%tw: transaction weight (in sipa)
%tW: transaction witness length (in bytes)
%tF: transaction fee paid by block (negative for coinbase reward)
%tN: transaction number within block
%tD: transaction dogecoin days destroyed (by block times)
%tX: transaction as a hex string (including inputs and outputs)
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB\-\-input\fR=\fIFORMAT\fR
.RS 4
Print out the format string for each transaction input (in the order they are in the transaction)\&. All the block and transaction escape codes are valid, and the following additional ones:
.sp
.if n \{\
.RS 4
.\}
.nf
%ih: input hash as a 64\-character\-little\-endian hex string
%ii: input index
%il: input script length
%is: input script as a hex string
%iq: input nSequence value
%iN: input number within transaction
%iB: input UTXO block number (0 for coinbase)
%iT: input UTXO transaction number (\-1 for coinbase)
%iX: input as a hex string
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB\-\-output\fR=\fIFORMAT\fR
.RS 4
Print out the format string for each transaction output (in the order they are in the transaction)\&. All the block and transaction escape codes are valid, and the following additional ones:
.sp
.if n \{\
.RS 4
.\}
.nf
%oa: output amount
%ol: output script length
%os: output script as a hex string\&.
%oN: output number within transaction
%oU: output is unspendable (0==spendable)
%oX: output as a hex string
.fi
.if n \{\
.RE
.\}
.RE
.PP
\fB\-\-end\-hash\fR
.RS 4
Stop iteration at this block hash (big\-endian)\&.
.RE
.PP
\fB\-\-start\-hash\fR
.RS 4
Start iteration at this block hash (big\-endian)\&.
.RE
.PP
\fB\-\-end\fR
.RS 4
Stop iteration at this block number (on longest chain)\&.
.RE
.PP
\fB\-\-start\fR
.RS 4
Start iteration at this block number (on longest chain)\&.
.RE
.PP
\fB\-q, \-\-quiet\fR
.RS 4
Don\(cqt print progress messages, just print the output\&. All progress messages are printed to standard output prefixed with "dogecoin\-iterate:" for easy filtering anyway\&.
.RE
.PP
\fB\-t, \-\-testnet\fR
.RS 4
Expect blocks from testnet3 rather than the main dogecoin chain (and change default blockdir to be ~/\&.dogecoin/testnet3/blocks)\&.
.RE
.PP
\fB\-\-progress\fR=\fINUM\-CHARS\fR
.RS 4
Print
\fI\&.\fR
to standard error such that at there will be this many drawn at completion\&.
.RE
.PP
\fB\-\-blockdir\fR=\fIDIRECTORY\fR
.RS 4
Use this directory to find block files rather than ~/\&.dogecoin/blocks\&.
.RE
.PP
\fB\-\-cache\fR=\fIDIRECTORY\fR
.RS 4
Cache results in this directory; particularly useful for repeated UTXO runs with same
\fI\-\-start\fR\&.
.RE
.PP
\fB\-\-no\-mmap\fR
.RS 4
Use read, not mmap, on the block files\&. This may be slower\&.
.RE
.PP
\fB\-h, \-\-help\fR
.RS 4
Print a brief help message, which is less useful than this manpage\&.
.RE
.SH "EXAMPLES"
.PP
\fBExample\ \&1.\ \&Simple sanity check: read blocks and do nothing\fR
.sp
dogecoin\-iterate
.PP
\fBExample\ \&2.\ \&Print out the height and length of every block, separated by a space\fR
.sp
dogecoin\-iterate \-\-block=\fI%bh %bl\fR
.PP
\fBExample\ \&3.\ \&Print out the block height and weight of every transaction\fR
.sp
dogecoin\-iterate \-\-tx=\fIheight=%bh length=%tw\fR
.PP
\fBExample\ \&4.\ \&Print out the length of every scriptSig (input script)\fR
.sp
dogecoin\-iterate \-\-input=%il
.PP
\fBExample\ \&5.\ \&Print out the length of every scriptPubKey (output script)\&.\fR
.sp
dogecoin\-iterate \-\-output=%ol
.PP
\fBExample\ \&6.\ \&Print out <block number>,<transaction hash>,<script> for each output\fR
.sp
dogecoin\-iterate \-\-output=%bn,%th,%os
.SH "NOTES"
.sp
Use of \fB%tF\fR, \fB%iB\fR, \fB%iT\fR, \fB%ia\fR or \fB%ip\fR significantly slows iteration, as this requires \fBdogecoin\-iterate\fR to track unspent outputs\&.
.SH "BUGS"
.sp
This manpage documents how it should work, not how it does work\&.
.sp
The chain of blocks to follow is determined solely by block height, which may not be the same as strongest chain in theoretical cases\&.
.SH "AUTHOR"
.sp
Rusty Russell <rusty@rustcorp\&.com\&.au> wrote bitcoin-iterate, pulling in CCAN modules\&.
Mike Mallett <mike@nerdcore\&.net> made Dogecoin modifications, WOW!
.SH "RESOURCES"
.sp
Main web site: http://github\&.com/nerdcorenet/dogecoin\-iterate
.SH "COPYING"
.sp
This program is free software; you can redistribute it and/or modify it under the terms of the GNU General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version\&.
